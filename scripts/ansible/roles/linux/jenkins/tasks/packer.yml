# Copyright (c) Open Enclave SDK contributors.
# Licensed under the MIT License.

---
- name: Include distribution vars
  ansible.builtin.include_vars:
    file: "{{ ansible_distribution | lower }}/main.yml"

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Jenkins | Install Java JRE needed by Jenkins
  ansible.builtin.package:
    name: "{{ java_packages }}"
    state: latest
  retries: 10
  delay: 10
  register: result
  until: result is success

- name: Jenkins | Create the Jenkins group
  ansible.builtin.group:
    name: jenkins
    state: present

- name: Jenkins | Add the Jenkins user
  ansible.builtin.user:
    name: jenkins
    group: jenkins
    state: present

- name: Jenkins | Import Docker install tasks
  ansible.builtin.import_role:
    name: linux/docker
    tasks_from: stable-install.yml
  vars:
    docker_ansible: True

- name: Jenkins | Add the Jenkins system user to the Docker group
  ansible.builtin.user:
    name: jenkins
    groups: docker
    append: yes

- name: Jenkins | Determine if sgx_prv group exists
  ansible.builtin.getent:
    database: group
    key: sgx_prv

# This task may not be useful if the same user is removed during VM generalization and deprovisioning.
- name: Jenkins | Add user to sgx_prv group
  ansible.builtin.user:
    name: "{{ jenkins_admin_name }}"
    groups: sgx_prv
    append: yes
  when: "'sgx_prv' in ansible_facts.getent_group"

- name: Jenkins | Docker Login
  community.general.docker_login:
    registry_url: "{{ docker_registry }}"
    username: "{{ docker_user_name }}"
    password: "{{ docker_user_password }}"
    reauthorize: yes

- name: Jenkins | Docker pull images
  community.general.docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
    - "{{ docker_registry }}/oetools-20.04:{{ docker_tag }}"
  retries: 10
  delay: 10

- name: Jenkins | Docker Logout
  community.general.docker_login:
    registry_url: "{{ docker_registry }}"
    state: absent

- name: Install Code Coverage dependency - APT
  ansible.builtin.apt:
    name: "{{ apt_packages_code_coverage }}"
    state: latest
    update_cache: yes
    install_recommends: no
  retries: 100
  register: install
  until: install is success

- name: Install Code Coverage dependency - Python3
  ansible.builtin.pip:
    name: "{{ pip_packages_code_coverage }}"
    executable: pip3
