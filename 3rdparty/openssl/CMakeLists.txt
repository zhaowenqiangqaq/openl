# Copyright (c) Open Enclave SDK contributors.
# Licensed under the MIT License.

check_submodule_not_empty(openssl)
check_submodule_not_empty(intel-sgx-ssl)

include(ExternalProject)

set(INTELSSL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/intel-sgx-ssl/openssl_source)
set(OPENSSL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/openssl)
set(OPENSSL_BUILD ${CMAKE_CURRENT_BINARY_DIR}/build)
set(OPENSSL_BUILD_INCLUDES ${OPENSSL_BUILD}/include)
set(OPENSSL_BUILD_GENERATED ${OPENSSL_BUILD}/generated)
set(OPENSSL_INSTALL_INCLUDES ${OE_INCDIR}/openenclave/openssl)

set(OPENSSL_3_DIR ${CMAKE_CURRENT_SOURCE_DIR}/openssl_3)
set(OPENSSL_3_BUILD_INCLUDES ${OPENSSL_BUILD}/include_3)
set(OPENSSL_3_BUILD_GENERATED ${OPENSSL_BUILD}/generated_3)
set(OPENSSL_3_INSTALL_INCLUDES ${OE_INCDIR}/openenclave/openssl_3/openssl)
set(OPENSSL_3_PROVIDER_COMMON_INCLUDES
    ${OPENSSL_3_DIR}/providers/common/include)

set(OPENSSL_C_COMPILER ${CMAKE_C_COMPILER})
set(OPENSSL_CXX_COMPILER ${CMAKE_CXX_COMPILER})

set(OPENSSL_APPEND_UNSUPPORTED
    "${CMAKE_CURRENT_SOURCE_DIR}/append-unsupported ${OPENSSL_INSTALL_INCLUDES}"
)
set(OPENSSL_3_APPEND_UNSUPPORTED
    "${CMAKE_CURRENT_SOURCE_DIR}/append-unsupported ${OPENSSL_3_INSTALL_INCLUDES}"
)

if (OE_SGX)
  set(ARCH "linux-x86_64")
elseif (OE_TRUSTZONE)
  # Note that the aarch64 is not supported yet.
  set(ARCH "linux-aarch64")
else ()
  message(FATAL_ERROR "Unknown architecture. OpenSSL cannot be configured.")
endif ()

set(OPENSSL_ASSEMBLY_SCRIPTS
    crypto/aes/asm/aesni-mb-x86_64
    crypto/aes/asm/aesni-sha1-x86_64
    crypto/aes/asm/aesni-sha256-x86_64
    crypto/bn/asm/rsaz-avx2
    crypto/bn/asm/rsaz-x86_64
    crypto/bn/asm/x86_64-gf2m
    crypto/bn/asm/x86_64-mont
    crypto/bn/asm/x86_64-mont5
    crypto/ec/asm/ecp_nistz256-x86_64
    crypto/ec/asm/x25519-x86_64
    crypto/md5/asm/md5-x86_64
    crypto/modes/asm/aesni-gcm-x86_64
    crypto/modes/asm/ghash-x86_64
    crypto/sha/asm/keccak1600-x86_64
    crypto/sha/asm/sha1-mb-x86_64
    crypto/sha/asm/sha1-x86_64
    crypto/sha/asm/sha256-mb-x86_64
    crypto/sha/asm/sha512-x86_64)

list(
  APPEND
  OPENSSL_3_ASSEMBLY_SCRIPTS
  ${OPENSSL_ASSEMBLY_SCRIPTS}
  crypto/aes/asm/aes-x86_64
  crypto/aes/asm/bsaes-x86_64
  crypto/bn/asm/rsaz-2k-avx512
  crypto/bn/asm/rsaz-3k-avx512
  crypto/bn/asm/rsaz-4k-avx512)

if (OE_SGX)
  set(OPENSSL_GENERATED_BYPRODUCTS ${OPENSSL_ASSEMBLY_SCRIPTS})
  set(OPENSSL_3_GENERATED_BYPRODUCTS ${OPENSSL_3_ASSEMBLY_SCRIPTS})

  # Special case where assembly file is generated by different script
  # (crypto/sha/asm/sha256-mb-x86_64.pl)
  list(APPEND OPENSSL_GENERATED_BYPRODUCTS crypto/sha/asm/sha256-x86_64)
  list(APPEND OPENSSL_3_GENERATED_BYPRODUCTS crypto/sha/asm/sha256-x86_64)

  list(TRANSFORM OPENSSL_GENERATED_BYPRODUCTS
       PREPEND ${OPENSSL_BUILD_GENERATED}/)
  list(TRANSFORM OPENSSL_GENERATED_BYPRODUCTS APPEND .s)

  list(TRANSFORM OPENSSL_3_GENERATED_BYPRODUCTS
       PREPEND ${OPENSSL_3_BUILD_GENERATED}/)
  list(TRANSFORM OPENSSL_3_GENERATED_BYPRODUCTS APPEND .s)
endif ()

if (WIN32)
  # Set the compiler to clang. Otherwise cl will be used.
  set(OPENSSL_C_COMPILER clang)
endif ()

# Few OpenSSL configuration scripts require Pod::Usage module that is not supported by the perl
# from git bash on Windows. For the consistency of the build flow, we keep the copies of files
# generated by these scripts (see update.make) and directly use those copies on both Linux and Windows
# builds.
list(
  APPEND
  OPENSSL_CONFIGURE_COMMANDS
  COMMAND
  ${CMAKE_COMMAND}
  -E
  make_directory
  ${OPENSSL_BUILD_INCLUDES}/crypto
  COMMAND
  ${CMAKE_COMMAND}
  -E
  make_directory
  ${OPENSSL_BUILD_INCLUDES}/openssl)

list(
  APPEND
  OPENSSL_3_CONFIGURE_COMMANDS
  COMMAND
  ${CMAKE_COMMAND}
  -E
  make_directory
  ${OPENSSL_3_BUILD_INCLUDES}/crypto
  COMMAND
  ${CMAKE_COMMAND}
  -E
  make_directory
  ${OPENSSL_3_BUILD_INCLUDES}/openssl)

list(
  APPEND
  OPENSSL_INCLUDES_COMMANDS
  COMMAND
  ${CMAKE_COMMAND}
  -E
  copy_directory
  ${OPENSSL_DIR}/include/openssl
  ${OPENSSL_INSTALL_INCLUDES})

list(
  APPEND
  OPENSSL_3_INCLUDES_COMMANDS
  COMMAND
  ${CMAKE_COMMAND}
  -E
  copy_directory
  ${OPENSSL_3_DIR}/include/openssl
  ${OPENSSL_3_INSTALL_INCLUDES})

macro (append_copy_command LIST SOURCE DESTINATION)
  list(
    APPEND
    ${LIST}
    COMMAND
    ${CMAKE_COMMAND}
    -E
    copy
    ${SOURCE}
    ${DESTINATION})
endmacro ()

set(OPENSSL_CRYPTO_HEADERS bn_conf.h dso_conf.h)
foreach (header_file ${OPENSSL_CRYPTO_HEADERS})
  append_copy_command(
    OPENSSL_CONFIGURE_COMMANDS
    ${CMAKE_CURRENT_SOURCE_DIR}/include/${header_file}
    ${OPENSSL_BUILD_INCLUDES}/crypto/${header_file})
  append_copy_command(
    OPENSSL_3_CONFIGURE_COMMANDS
    ${CMAKE_CURRENT_SOURCE_DIR}/include_3/crypto/${header_file}
    ${OPENSSL_3_BUILD_INCLUDES}/crypto/${header_file})
endforeach ()

# NOTE: OpenSSL 1.0 only
set(OPENSSL_INCLUDE_HEADERS opensslconf.h)
foreach (header_file ${OPENSSL_INCLUDE_HEADERS})
  append_copy_command(
    OPENSSL_CONFIGURE_COMMANDS
    ${CMAKE_CURRENT_SOURCE_DIR}/include/${header_file}
    ${OPENSSL_BUILD_INCLUDES}/openssl/${header_file})
  append_copy_command(
    OPENSSL_INCLUDES_COMMANDS ${OPENSSL_BUILD_INCLUDES}/openssl/${header_file}
    ${OPENSSL_INSTALL_INCLUDES}/${header_file})
endforeach ()

set(OPENSSL_3_INCLUDE_HEADERS
    crypto.h
    bio.h
    cmp.h
    cms.h
    conf.h
    asn1.h
    asn1t.h
    x509.h
    x509v3.h
    crmf.h
    err.h
    srp.h
    ssl.h
    ess.h
    ui.h
    ct.h
    lhash.h
    fipskey.h
    x509_vfy.h
    pkcs7.h
    pkcs12.h
    ocsp.h
    opensslv.h
    configuration.h
    safestack.h)
foreach (header_file ${OPENSSL_3_INCLUDE_HEADERS})
  append_copy_command(
    OPENSSL_3_CONFIGURE_COMMANDS
    ${CMAKE_CURRENT_SOURCE_DIR}/include_3/openssl/${header_file}
    ${OPENSSL_3_BUILD_INCLUDES}/openssl/${header_file})
  append_copy_command(
    OPENSSL_3_INCLUDES_COMMANDS
    ${OPENSSL_3_BUILD_INCLUDES}/openssl/${header_file}
    ${OPENSSL_3_INSTALL_INCLUDES}/${header_file})
endforeach ()

set(OPENSSL_3_PROVIDERS_HEADERS
    der_digests.h
    der_dsa.h
    der_ec.h
    der_ecx.h
    der_rsa.h
    der_sm2.h
    der_wrap.h)
foreach (header_file ${OPENSSL_3_PROVIDERS_HEADERS})
  append_copy_command(
    OPENSSL_3_CONFIGURE_COMMANDS
    ${CMAKE_CURRENT_SOURCE_DIR}/include_3/prov/${header_file}
    ${OPENSSL_3_PROVIDER_COMMON_INCLUDES}/prov/${header_file})
endforeach ()

set(OPENSSL_UNSUPPORTED_HEADERS unsupported.h crypto_unsupported.h
                                ssl_unsupported.h x509_vfy_unsupported.h)
foreach (header_file ${OPENSSL_UNSUPPORTED_HEADERS})
  append_copy_command(
    OPENSSL_INCLUDES_COMMANDS
    ${CMAKE_CURRENT_SOURCE_DIR}/include_unsupported/${header_file}
    ${OPENSSL_INSTALL_INCLUDES}/${header_file})
  append_copy_command(
    OPENSSL_3_INCLUDES_COMMANDS
    ${CMAKE_CURRENT_SOURCE_DIR}/include_unsupported_3/${header_file}
    ${OPENSSL_3_INSTALL_INCLUDES}/${header_file})
endforeach ()

ExternalProject_Add(
  openssl_configure
  SOURCE_DIR ${OPENSSL_DIR}
  CONFIGURE_COMMAND ${OPENSSL_CONFIGURE_COMMANDS}
  BUILD_COMMAND ""
  INSTALL_COMMAND "")

ExternalProject_Add(
  openssl_3_configure
  SOURCE_DIR ${OPENSSL_3_DIR}
  CONFIGURE_COMMAND ${OPENSSL_3_CONFIGURE_COMMANDS}
  BUILD_COMMAND ""
  INSTALL_COMMAND "")

# The following commmand prepares the headers to be published. The headers
# consist of those in the openssl/include/openssl folder, opensslconf.h,
# and unsupported.h. The unsupported.h header file includes a list of APIs that are
# disabled by OE for security concerns. A few headers are patched (using the
# append-unsupported script) to include unsupported.h so that OE can enforce
# compile-time errors when any of those unsafe APIs is used.
ExternalProject_Add(
  openssl_includes
  SOURCE_DIR ${OPENSSL_DIR}
  CONFIGURE_COMMAND
  COMMAND ${OPENSSL_INCLUDES_COMMANDS}
  COMMAND ${OE_BASH} -c "${OPENSSL_APPEND_UNSUPPORTED}"
  BUILD_COMMAND ""
  INSTALL_COMMAND "")

ExternalProject_Add(
  openssl_3_includes
  SOURCE_DIR ${OPENSSL_3_DIR}
  CONFIGURE_COMMAND
  COMMAND ${OPENSSL_3_INCLUDES_COMMANDS}
  COMMAND ${OE_BASH} -c "${OPENSSL_3_APPEND_UNSUPPORTED}"
  BUILD_COMMAND ""
  INSTALL_COMMAND "")

# Use the modified x86_64-xlate.pl from intel-sgx-ssl to generate assembly files.
# The modification is emitting the ret instruction rather than its constant encoding,
# which makes the generated the assembly files compatible with the LVI mitigation.
# To allow other perl scripts find the x86_64-xlate.pl, we copy all the scripts
# to the OPENSSL_BUILD and preserve the directory structure. For example, x86_64-xlate.pl
# is put under OPENSSL_BUILD/crypto/perlasm and aesni-mb-x86_64.pl (used to generate
# aesni-mb-x86_64.s) is put under OPENSSL_BUILD/crypto/aes/asm such that the latter can
# find the former.

set(OPENSSL_GENERATED_COMMANDS
    COMMAND ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_BUILD_GENERATED}/crypto/perlasm COMMAND ${CMAKE_COMMAND} -E copy
    ${INTELSSL_DIR}/x86_64-xlate.pl
    ${OPENSSL_BUILD_GENERATED}/crypto/perlasm/x86_64-xlate.pl COMMAND
    ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_BUILD_GENERATED}/crypto/aes/asm COMMAND ${CMAKE_COMMAND} -E
    make_directory ${OPENSSL_BUILD_GENERATED}/crypto/bn/asm COMMAND
    ${CMAKE_COMMAND} -E make_directory ${OPENSSL_BUILD_GENERATED}/crypto/ec/asm
    COMMAND ${CMAKE_COMMAND} -E copy
    ${OPENSSL_DIR}/crypto/ec/ecp_nistz256_table.c
    ${OPENSSL_BUILD_GENERATED}/crypto/ec/ecp_nistz256_table.c COMMAND
    ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_BUILD_GENERATED}/crypto/md5/asm COMMAND ${CMAKE_COMMAND} -E
    make_directory ${OPENSSL_BUILD_GENERATED}/crypto/modes/asm COMMAND
    ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_BUILD_GENERATED}/crypto/sha/asm)

set(OPENSSL_3_GENERATED_COMMANDS
    COMMAND ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_3_BUILD_GENERATED}/crypto/perlasm COMMAND ${CMAKE_COMMAND} -E
    copy ${OPENSSL_3_DIR}/crypto/perlasm/x86_64-xlate.pl
    ${OPENSSL_3_BUILD_GENERATED}/crypto/perlasm/x86_64-xlate.pl COMMAND
    ${CMAKE_COMMAND} -E copy ${OPENSSL_3_DIR}/crypto/perlasm/x86_64-support.pl
    ${OPENSSL_3_BUILD_GENERATED}/crypto/perlasm/x86_64-support.pl COMMAND
    ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_3_BUILD_GENERATED}/crypto/aes/asm COMMAND ${CMAKE_COMMAND} -E
    make_directory ${OPENSSL_3_BUILD_GENERATED}/crypto/bn/asm COMMAND
    ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_3_BUILD_GENERATED}/crypto/ec/asm COMMAND ${CMAKE_COMMAND} -E copy
    ${OPENSSL_3_DIR}/crypto/ec/ecp_nistz256_table.c
    ${OPENSSL_3_BUILD_GENERATED}/crypto/ec/ecp_nistz256_table.c COMMAND
    ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_3_BUILD_GENERATED}/crypto/md5/asm COMMAND ${CMAKE_COMMAND} -E
    make_directory ${OPENSSL_3_BUILD_GENERATED}/crypto/modes/asm COMMAND
    ${CMAKE_COMMAND} -E make_directory
    ${OPENSSL_3_BUILD_GENERATED}/crypto/sha/asm)

macro (append_generate_command LIST FILE_NAME SOURCE_DIR DEST_DIR)
  list(
    APPEND
    ${LIST}
    COMMAND
    ${CMAKE_COMMAND}
    -E
    copy
    ${SOURCE_DIR}/${FILE_NAME}.pl
    ${DEST_DIR}/${FILE_NAME}.pl)
  list(
    APPEND
    ${LIST}
    COMMAND
    ${CMAKE_COMMAND}
    -E
    env
    CC=${OPENSSL_C_COMPILER}
    ${OE_PERL}
    ${DEST_DIR}/${FILE_NAME}.pl
    elf
    ${DEST_DIR}/${FILE_NAME}.s)
endmacro ()

foreach (source_file ${OPENSSL_ASSEMBLY_SCRIPTS})
  append_generate_command(OPENSSL_GENERATED_COMMANDS ${source_file}
                          ${OPENSSL_DIR} ${OPENSSL_BUILD_GENERATED})
endforeach ()

foreach (source_file ${OPENSSL_3_ASSEMBLY_SCRIPTS})
  append_generate_command(OPENSSL_3_GENERATED_COMMANDS ${source_file}
                          ${OPENSSL_3_DIR} ${OPENSSL_3_BUILD_GENERATED})
endforeach ()

# Special case where script name doesn't match target file
list(
  APPEND
  OPENSSL_GENERATED_COMMANDS
  COMMAND
  ${CMAKE_COMMAND}
  -E
  env
  CC=${OPENSSL_C_COMPILER}
  ${OE_PERL}
  ${OPENSSL_BUILD_GENERATED}/crypto/sha/asm/sha512-x86_64.pl
  elf
  ${OPENSSL_BUILD_GENERATED}/crypto/sha/asm/sha256-x86_64.s)

list(
  APPEND
  OPENSSL_3_GENERATED_COMMANDS
  COMMAND
  ${CMAKE_COMMAND}
  -E
  env
  CC=${OPENSSL_C_COMPILER}
  ${OE_PERL}
  ${OPENSSL_3_BUILD_GENERATED}/crypto/sha/asm/sha512-x86_64.pl
  elf
  ${OPENSSL_3_BUILD_GENERATED}/crypto/sha/asm/sha256-x86_64.s)

ExternalProject_Add(
  openssl_generated
  SOURCE_DIR ${OPENSSL_DIR}
  CONFIGURE_COMMAND ""
  BUILD_COMMAND ${OPENSSL_GENERATED_COMMANDS}
  BUILD_BYPRODUCTS ${OPENSSL_GENERATED_BYPRODUCTS}
  INSTALL_COMMAND "")

ExternalProject_Add(
  openssl_3_generated
  SOURCE_DIR ${OPENSSL_3_DIR}
  CONFIGURE_COMMAND ""
  BUILD_COMMAND ${OPENSSL_3_GENERATED_COMMANDS}
  BUILD_BYPRODUCTS ${OPENSSL_3_GENERATED_BYPRODUCTS}
  INSTALL_COMMAND "")

# Few assembly files generated by the modified x86_64-xlate.pl still contain constant
# encodings that require further patching for enabling LVI mitigation. Such files are checked
# in the intel-sgx-ssl repository so we directly copy those files from there.
# Note that only the following three files are required for control-flow-based LVI mitigation
# that OE currently supports, refer to https://github.com/intel/intel-sgx-ssl/blob/master/Linux/prepare_openssl.sh#L224
# for the reference.
set(OPENSSL_COPIED_BYPRODUCTS
    ${OPENSSL_BUILD_GENERATED}/crypto/aes/asm/aesni-x86_64.s
    ${OPENSSL_BUILD_GENERATED}/crypto/aes/asm/vpaes-x86_64.s
    ${OPENSSL_BUILD_GENERATED}/crypto/x86_64cpuid.s)
ExternalProject_Add(
  openssl_copied
  SOURCE_DIR ${INTELSSL_DIR}
  CONFIGURE_COMMAND ""
  BUILD_COMMAND
  COMMAND ${CMAKE_COMMAND} -E copy ${INTELSSL_DIR}/Linux/aesni-x86_64.s
          ${OPENSSL_BUILD_GENERATED}/crypto/aes/asm/aesni-x86_64.s
  COMMAND ${CMAKE_COMMAND} -E copy ${INTELSSL_DIR}/Linux/vpaes-x86_64.s
          ${OPENSSL_BUILD_GENERATED}/crypto/aes/asm/vpaes-x86_64.s
  COMMAND ${CMAKE_COMMAND} -E copy ${INTELSSL_DIR}/Linux/x86_64cpuid.s
          ${OPENSSL_BUILD_GENERATED}/crypto/x86_64cpuid.s
  BUILD_BYPRODUCTS ${OPENSSL_COPIED_BYPRODUCTS}
  INSTALL_COMMAND "")

set(OPENSSL_3_COPIED_BYPRODUCTS
    ${OPENSSL_3_BUILD_GENERATED}/crypto/aes/asm/aesni-x86_64.s
    ${OPENSSL_3_BUILD_GENERATED}/crypto/aes/asm/vpaes-x86_64.s
    ${OPENSSL_3_BUILD_GENERATED}/crypto/x86_64cpuid.s)
ExternalProject_Add(
  openssl_3_copied
  SOURCE_DIR ${INTELSSL_DIR}
  CONFIGURE_COMMAND ""
  BUILD_COMMAND
  COMMAND ${CMAKE_COMMAND} -E copy ${INTELSSL_DIR}/Linux/aesni-x86_64.s
          ${OPENSSL_3_BUILD_GENERATED}/crypto/aes/asm/aesni-x86_64.s
  COMMAND ${CMAKE_COMMAND} -E copy ${INTELSSL_DIR}/Linux/vpaes-x86_64.s
          ${OPENSSL_3_BUILD_GENERATED}/crypto/aes/asm/vpaes-x86_64.s
  COMMAND ${CMAKE_COMMAND} -E copy ${INTELSSL_DIR}/Linux/x86_64cpuid.s
          ${OPENSSL_3_BUILD_GENERATED}/crypto/x86_64cpuid.s
  BUILD_BYPRODUCTS ${OPENSSL_3_COPIED_BYPRODUCTS}
  INSTALL_COMMAND "")

add_dependencies(openssl_includes openssl_configure)
add_dependencies(openssl_copied openssl_configure)
add_dependencies(openssl_generated openssl_includes)
add_dependencies(openssl_generated openssl_copied)

add_dependencies(openssl_3_includes openssl_3_configure)
add_dependencies(openssl_3_copied openssl_3_configure)
add_dependencies(openssl_3_generated openssl_3_includes)
add_dependencies(openssl_3_generated openssl_3_copied)

# Including same set of source files for building libcrypto.a based on the OpenSSL Makefile(s).
set(OPENSSL_SHARED_CRYPTO_SOURCE
    crypto/aes/aes_cfb.c
    crypto/aes/aes_ecb.c
    crypto/aes/aes_ige.c
    crypto/aes/aes_misc.c
    crypto/aes/aes_ofb.c
    crypto/aes/aes_wrap.c
    crypto/asn1/a_bitstr.c
    crypto/asn1/a_d2i_fp.c
    crypto/asn1/a_digest.c
    crypto/asn1/a_dup.c
    crypto/asn1/a_gentm.c
    crypto/asn1/a_i2d_fp.c
    crypto/asn1/a_int.c
    crypto/asn1/a_mbstr.c
    crypto/asn1/a_object.c
    crypto/asn1/a_octet.c
    crypto/asn1/a_print.c
    crypto/asn1/a_sign.c
    crypto/asn1/a_strex.c
    crypto/asn1/a_strnid.c
    crypto/asn1/a_time.c
    crypto/asn1/a_type.c
    crypto/asn1/a_utctm.c
    crypto/asn1/a_utf8.c
    crypto/asn1/a_verify.c
    crypto/asn1/ameth_lib.c
    crypto/asn1/asn1_err.c
    crypto/asn1/asn1_gen.c
    crypto/asn1/asn1_item_list.c
    crypto/asn1/asn1_lib.c
    crypto/asn1/asn_mime.c
    crypto/asn1/asn_moid.c
    crypto/asn1/asn_mstbl.c
    crypto/asn1/asn_pack.c
    crypto/asn1/bio_asn1.c
    crypto/asn1/bio_ndef.c
    crypto/asn1/d2i_pr.c
    crypto/asn1/d2i_pu.c
    crypto/asn1/evp_asn1.c
    crypto/asn1/f_int.c
    crypto/asn1/f_string.c
    crypto/asn1/nsseq.c
    crypto/asn1/p5_pbe.c
    crypto/asn1/p5_pbev2.c
    crypto/asn1/p5_scrypt.c
    crypto/asn1/p8_pkey.c
    crypto/asn1/t_bitst.c
    crypto/asn1/t_pkey.c
    crypto/asn1/t_spki.c
    crypto/asn1/tasn_dec.c
    crypto/asn1/tasn_enc.c
    crypto/asn1/tasn_fre.c
    crypto/asn1/tasn_new.c
    crypto/asn1/tasn_prn.c
    crypto/asn1/tasn_scn.c
    crypto/asn1/tasn_typ.c
    crypto/asn1/tasn_utl.c
    crypto/asn1/x_algor.c
    crypto/asn1/x_bignum.c
    crypto/asn1/x_info.c
    crypto/asn1/x_int64.c
    crypto/asn1/x_long.c
    crypto/asn1/x_pkey.c
    crypto/asn1/x_sig.c
    crypto/asn1/x_spki.c
    crypto/asn1/x_val.c
    crypto/async/arch/async_null.c
    crypto/async/arch/async_posix.c
    crypto/async/arch/async_win.c
    crypto/async/async.c
    crypto/async/async_err.c
    crypto/async/async_wait.c
    crypto/bio/bf_buff.c
    crypto/bio/bf_lbuf.c
    crypto/bio/bf_nbio.c
    crypto/bio/bf_null.c
    crypto/bio/bio_cb.c
    crypto/bio/bio_err.c
    crypto/bio/bio_lib.c
    crypto/bio/bio_meth.c
    crypto/bio/bss_acpt.c
    crypto/bio/bss_bio.c
    crypto/bio/bss_conn.c
    crypto/bio/bss_dgram.c
    crypto/bio/bss_fd.c
    crypto/bio/bss_file.c
    crypto/bio/bss_log.c
    crypto/bio/bss_mem.c
    crypto/bio/bss_null.c
    crypto/bio/bss_sock.c
    crypto/bn/asm/x86_64-gcc.c
    crypto/bn/bn_add.c
    crypto/bn/bn_blind.c
    crypto/bn/bn_const.c
    crypto/bn/bn_ctx.c
    crypto/bn/bn_depr.c
    crypto/bn/bn_dh.c
    crypto/bn/bn_div.c
    crypto/bn/bn_err.c
    crypto/bn/bn_exp.c
    crypto/bn/bn_exp2.c
    crypto/bn/bn_gcd.c
    crypto/bn/bn_gf2m.c
    crypto/bn/bn_intern.c
    crypto/bn/bn_kron.c
    crypto/bn/bn_lib.c
    crypto/bn/bn_mod.c
    crypto/bn/bn_mont.c
    crypto/bn/bn_mpi.c
    crypto/bn/bn_mul.c
    crypto/bn/bn_nist.c
    crypto/bn/bn_prime.c
    crypto/bn/bn_print.c
    crypto/bn/bn_rand.c
    crypto/bn/bn_recp.c
    crypto/bn/bn_shift.c
    crypto/bn/bn_sqr.c
    crypto/bn/bn_sqrt.c
    crypto/bn/bn_srp.c
    crypto/bn/bn_word.c
    crypto/bn/bn_x931p.c
    crypto/bn/rsaz_exp.c
    crypto/buffer/buf_err.c
    crypto/buffer/buffer.c
    crypto/cmac/cmac.c
    crypto/comp/c_zlib.c
    crypto/comp/comp_err.c
    crypto/comp/comp_lib.c
    crypto/conf/conf_api.c
    crypto/conf/conf_def.c
    crypto/conf/conf_err.c
    crypto/conf/conf_lib.c
    crypto/conf/conf_mall.c
    crypto/conf/conf_mod.c
    crypto/conf/conf_sap.c
    crypto/conf/conf_ssl.c
    crypto/cpt_err.c
    crypto/cryptlib.c
    crypto/ctype.c
    crypto/cversion.c
    crypto/des/cbc_cksm.c
    crypto/des/cbc_enc.c
    crypto/des/cfb64ede.c
    crypto/des/cfb64enc.c
    crypto/des/cfb_enc.c
    crypto/des/des_enc.c
    crypto/des/ecb3_enc.c
    crypto/des/ecb_enc.c
    crypto/des/fcrypt.c
    crypto/des/fcrypt_b.c
    crypto/des/ofb64ede.c
    crypto/des/ofb64enc.c
    crypto/des/ofb_enc.c
    crypto/des/pcbc_enc.c
    crypto/des/qud_cksm.c
    crypto/des/rand_key.c
    crypto/des/set_key.c
    crypto/des/str2key.c
    crypto/des/xcbc_enc.c
    crypto/dh/dh_ameth.c
    crypto/dh/dh_asn1.c
    crypto/dh/dh_check.c
    crypto/dh/dh_depr.c
    crypto/dh/dh_err.c
    crypto/dh/dh_gen.c
    crypto/dh/dh_kdf.c
    crypto/dh/dh_key.c
    crypto/dh/dh_lib.c
    crypto/dh/dh_meth.c
    crypto/dh/dh_pmeth.c
    crypto/dh/dh_prn.c
    crypto/dh/dh_rfc5114.c
    crypto/dsa/dsa_ameth.c
    crypto/dsa/dsa_asn1.c
    crypto/dsa/dsa_depr.c
    crypto/dsa/dsa_err.c
    crypto/dsa/dsa_gen.c
    crypto/dsa/dsa_key.c
    crypto/dsa/dsa_lib.c
    crypto/dsa/dsa_meth.c
    crypto/dsa/dsa_ossl.c
    crypto/dsa/dsa_pmeth.c
    crypto/dsa/dsa_prn.c
    crypto/dsa/dsa_sign.c
    crypto/dsa/dsa_vrf.c
    crypto/dso/dso_dl.c
    crypto/dso/dso_dlfcn.c
    crypto/dso/dso_err.c
    crypto/dso/dso_lib.c
    crypto/dso/dso_openssl.c
    crypto/dso/dso_vms.c
    crypto/dso/dso_win32.c
    crypto/ebcdic.c
    crypto/ec/curve25519.c
    crypto/ec/curve448/curve448.c
    crypto/ec/curve448/curve448_tables.c
    crypto/ec/curve448/eddsa.c
    crypto/ec/curve448/f_generic.c
    crypto/ec/curve448/scalar.c
    crypto/ec/ec2_oct.c
    crypto/ec/ec2_smpl.c
    crypto/ec/ec_ameth.c
    crypto/ec/ec_asn1.c
    crypto/ec/ec_check.c
    crypto/ec/ec_curve.c
    crypto/ec/ec_cvt.c
    crypto/ec/ec_err.c
    crypto/ec/ec_key.c
    crypto/ec/ec_kmeth.c
    crypto/ec/ec_lib.c
    crypto/ec/ec_mult.c
    crypto/ec/ec_oct.c
    crypto/ec/ec_pmeth.c
    crypto/ec/ec_print.c
    crypto/ec/ecdh_kdf.c
    crypto/ec/ecdh_ossl.c
    crypto/ec/ecdsa_ossl.c
    crypto/ec/ecdsa_sign.c
    crypto/ec/ecdsa_vrf.c
    crypto/ec/eck_prn.c
    crypto/ec/ecp_mont.c
    crypto/ec/ecp_nist.c
    crypto/ec/ecp_nistz256.c
    crypto/ec/ecp_oct.c
    crypto/ec/ecp_smpl.c
    crypto/ec/ecx_meth.c
    crypto/engine/eng_all.c
    crypto/engine/eng_cnf.c
    crypto/engine/eng_ctrl.c
    crypto/engine/eng_dyn.c
    crypto/engine/eng_err.c
    crypto/engine/eng_fat.c
    crypto/engine/eng_init.c
    crypto/engine/eng_lib.c
    crypto/engine/eng_list.c
    crypto/engine/eng_openssl.c
    crypto/engine/eng_pkey.c
    crypto/engine/eng_rdrand.c
    crypto/engine/eng_table.c
    crypto/engine/tb_asnmth.c
    crypto/engine/tb_cipher.c
    crypto/engine/tb_dh.c
    crypto/engine/tb_digest.c
    crypto/engine/tb_dsa.c
    crypto/engine/tb_eckey.c
    crypto/engine/tb_pkmeth.c
    crypto/engine/tb_rand.c
    crypto/engine/tb_rsa.c
    crypto/err/err.c
    crypto/err/err_all.c
    crypto/err/err_prn.c
    crypto/evp/bio_b64.c
    crypto/evp/bio_enc.c
    crypto/evp/bio_md.c
    crypto/evp/bio_ok.c
    crypto/evp/c_allc.c
    crypto/evp/c_alld.c
    crypto/evp/cmeth_lib.c
    crypto/evp/digest.c
    crypto/evp/e_aes.c
    crypto/evp/e_aes_cbc_hmac_sha1.c
    crypto/evp/e_aes_cbc_hmac_sha256.c
    crypto/evp/e_aria.c
    crypto/evp/e_bf.c
    crypto/evp/e_cast.c
    crypto/evp/e_chacha20_poly1305.c
    crypto/evp/e_des.c
    crypto/evp/e_des3.c
    crypto/evp/e_idea.c
    crypto/evp/e_null.c
    crypto/evp/e_old.c
    crypto/evp/e_rc2.c
    crypto/evp/e_rc4.c
    crypto/evp/e_rc4_hmac_md5.c
    crypto/evp/e_rc5.c
    crypto/evp/e_sm4.c
    crypto/evp/e_xcbc_d.c
    crypto/evp/encode.c
    crypto/evp/evp_cnf.c
    crypto/evp/evp_enc.c
    crypto/evp/evp_err.c
    crypto/evp/evp_key.c
    crypto/evp/evp_lib.c
    crypto/evp/evp_pbe.c
    crypto/evp/evp_pkey.c
    crypto/evp/m_null.c
    crypto/evp/m_sigver.c
    crypto/evp/names.c
    crypto/evp/p5_crpt.c
    crypto/evp/p5_crpt2.c
    crypto/evp/p_dec.c
    crypto/evp/p_enc.c
    crypto/evp/p_lib.c
    crypto/evp/p_open.c
    crypto/evp/p_seal.c
    crypto/evp/p_sign.c
    crypto/evp/p_verify.c
    crypto/evp/pbe_scrypt.c
    crypto/evp/pmeth_gn.c
    crypto/evp/pmeth_lib.c
    crypto/ex_data.c
    crypto/getenv.c
    crypto/hmac/hmac.c
    crypto/init.c
    crypto/kdf/kdf_err.c
    crypto/lhash/lh_stats.c
    crypto/lhash/lhash.c
    crypto/md5/md5_dgst.c
    crypto/md5/md5_one.c
    crypto/mem.c
    crypto/mem_sec.c
    crypto/modes/cbc128.c
    crypto/modes/ccm128.c
    crypto/modes/cfb128.c
    crypto/modes/ctr128.c
    crypto/modes/cts128.c
    crypto/modes/gcm128.c
    crypto/modes/ocb128.c
    crypto/modes/ofb128.c
    crypto/modes/wrap128.c
    crypto/modes/xts128.c
    crypto/o_dir.c
    crypto/o_fopen.c
    crypto/o_init.c
    crypto/o_str.c
    crypto/o_time.c
    crypto/objects/o_names.c
    crypto/objects/obj_dat.c
    crypto/objects/obj_err.c
    crypto/objects/obj_lib.c
    crypto/objects/obj_xref.c
    crypto/ocsp/ocsp_asn.c
    crypto/ocsp/ocsp_cl.c
    crypto/ocsp/ocsp_err.c
    crypto/ocsp/ocsp_ext.c
    crypto/ocsp/ocsp_lib.c
    crypto/ocsp/ocsp_prn.c
    crypto/ocsp/ocsp_srv.c
    crypto/ocsp/ocsp_vfy.c
    crypto/ocsp/v3_ocsp.c
    crypto/pem/pem_all.c
    crypto/pem/pem_err.c
    crypto/pem/pem_info.c
    crypto/pem/pem_lib.c
    crypto/pem/pem_oth.c
    crypto/pem/pem_pk8.c
    crypto/pem/pem_pkey.c
    crypto/pem/pem_sign.c
    crypto/pem/pem_x509.c
    crypto/pem/pem_xaux.c
    crypto/pem/pvkfmt.c
    crypto/pkcs12/p12_add.c
    crypto/pkcs12/p12_asn.c
    crypto/pkcs12/p12_attr.c
    crypto/pkcs12/p12_crpt.c
    crypto/pkcs12/p12_crt.c
    crypto/pkcs12/p12_decr.c
    crypto/pkcs12/p12_init.c
    crypto/pkcs12/p12_key.c
    crypto/pkcs12/p12_kiss.c
    crypto/pkcs12/p12_mutl.c
    crypto/pkcs12/p12_npas.c
    crypto/pkcs12/p12_p8d.c
    crypto/pkcs12/p12_p8e.c
    crypto/pkcs12/p12_sbag.c
    crypto/pkcs12/p12_utl.c
    crypto/pkcs12/pk12err.c
    crypto/pkcs7/bio_pk7.c
    crypto/pkcs7/pk7_asn1.c
    crypto/pkcs7/pk7_attr.c
    crypto/pkcs7/pk7_doit.c
    crypto/pkcs7/pk7_lib.c
    crypto/pkcs7/pk7_mime.c
    crypto/pkcs7/pk7_smime.c
    crypto/pkcs7/pkcs7err.c
    crypto/rand/rand_err.c
    crypto/rand/rand_lib.c
    crypto/rand/randfile.c
    crypto/rc2/rc2_cbc.c
    crypto/rc2/rc2_ecb.c
    crypto/rc2/rc2_skey.c
    crypto/rc2/rc2cfb64.c
    crypto/rc2/rc2ofb64.c
    crypto/rsa/rsa_ameth.c
    crypto/rsa/rsa_asn1.c
    crypto/rsa/rsa_chk.c
    crypto/rsa/rsa_crpt.c
    crypto/rsa/rsa_depr.c
    crypto/rsa/rsa_err.c
    crypto/rsa/rsa_gen.c
    crypto/rsa/rsa_lib.c
    crypto/rsa/rsa_meth.c
    crypto/rsa/rsa_mp.c
    crypto/rsa/rsa_none.c
    crypto/rsa/rsa_oaep.c
    crypto/rsa/rsa_ossl.c
    crypto/rsa/rsa_pk1.c
    crypto/rsa/rsa_pmeth.c
    crypto/rsa/rsa_prn.c
    crypto/rsa/rsa_pss.c
    crypto/rsa/rsa_saos.c
    crypto/rsa/rsa_sign.c
    crypto/rsa/rsa_x931.c
    crypto/rsa/rsa_x931g.c
    crypto/sha/sha1_one.c
    crypto/sha/sha1dgst.c
    crypto/sha/sha256.c
    crypto/sha/sha512.c
    crypto/stack/stack.c
    crypto/store/store_err.c
    crypto/store/store_init.c
    crypto/store/store_lib.c
    crypto/store/store_register.c
    crypto/store/store_strings.c
    crypto/threads_none.c
    crypto/threads_pthread.c
    crypto/threads_win.c
    crypto/ts/ts_asn1.c
    crypto/ts/ts_conf.c
    crypto/ts/ts_err.c
    crypto/ts/ts_lib.c
    crypto/ts/ts_req_print.c
    crypto/ts/ts_req_utils.c
    crypto/ts/ts_rsp_print.c
    crypto/ts/ts_rsp_sign.c
    crypto/ts/ts_rsp_utils.c
    crypto/ts/ts_rsp_verify.c
    crypto/ts/ts_verify_ctx.c
    crypto/txt_db/txt_db.c
    crypto/ui/ui_err.c
    crypto/ui/ui_lib.c
    crypto/ui/ui_null.c
    crypto/ui/ui_openssl.c
    crypto/ui/ui_util.c
    crypto/uid.c
    crypto/x509/by_dir.c
    crypto/x509/by_file.c
    crypto/x509/t_crl.c
    crypto/x509/t_req.c
    crypto/x509/t_x509.c
    crypto/x509/x509_att.c
    crypto/x509/x509_cmp.c
    crypto/x509/x509_d2.c
    crypto/x509/x509_def.c
    crypto/x509/x509_err.c
    crypto/x509/x509_ext.c
    crypto/x509/x509_lu.c
    crypto/x509/x509_meth.c
    crypto/x509/x509_obj.c
    crypto/x509/x509_r2x.c
    crypto/x509/x509_req.c
    crypto/x509/x509_set.c
    crypto/x509/x509_txt.c
    crypto/x509/x509_v3.c
    crypto/x509/x509_vfy.c
    crypto/x509/x509_vpm.c
    crypto/x509/x509cset.c
    crypto/x509/x509name.c
    crypto/x509/x509rset.c
    crypto/x509/x509spki.c
    crypto/x509/x509type.c
    crypto/x509/x_all.c
    crypto/x509/x_attrib.c
    crypto/x509/x_crl.c
    crypto/x509/x_exten.c
    crypto/x509/x_name.c
    crypto/x509/x_pubkey.c
    crypto/x509/x_req.c
    crypto/x509/x_x509.c
    crypto/x509/x_x509a.c)

list(
  APPEND
  OPENSSL_1_CRYPTO_SOURCE
  ${OPENSSL_SHARED_CRYPTO_SOURCE}
  crypto/aes/aes_cbc.c
  crypto/aes/aes_core.c
  crypto/asn1/asn1_par.c
  crypto/asn1/i2d_pr.c
  crypto/asn1/i2d_pu.c
  crypto/asn1/n_pkey.c
  crypto/bio/b_addr.c
  crypto/bio/b_dump.c
  crypto/bio/b_print.c
  crypto/bio/b_sock.c
  crypto/bio/b_sock2.c
  crypto/bn/rsa_sup_mul.c
  crypto/cmac/cm_ameth.c
  crypto/cmac/cm_pmeth.c
  crypto/dh/dh_rfc7919.c
  crypto/ec/curve448/arch_32/f_impl.c
  crypto/ec/ecp_nistp224.c
  crypto/ec/ecp_nistp256.c
  crypto/ec/ecp_nistp521.c
  crypto/ec/ecp_nistputil.c
  crypto/evp/e_camellia.c
  crypto/evp/e_seed.c
  crypto/evp/m_md2.c
  crypto/evp/m_md4.c
  crypto/evp/m_md5.c
  crypto/evp/m_md5_sha1.c
  crypto/evp/m_mdc2.c
  crypto/evp/m_ripemd.c
  crypto/evp/m_sha1.c
  crypto/evp/m_sha3.c
  crypto/evp/m_wp.c
  crypto/evp/pmeth_fn.c
  crypto/hmac/hm_ameth.c
  crypto/hmac/hm_pmeth.c
  crypto/kdf/hkdf.c
  crypto/kdf/scrypt.c
  crypto/kdf/tls1_prf.c
  crypto/mem_dbg.c
  crypto/o_fips.c
  crypto/ocsp/ocsp_ht.c
  crypto/rand/drbg_ctr.c
  crypto/rand/drbg_lib.c
  crypto/rand/rand_egd.c
  crypto/rand/rand_unix.c
  crypto/rand/rand_vms.c
  crypto/rand/rand_win.c
  crypto/rsa/rsa_ssl.c
  crypto/store/loader_file.c
  crypto/x509/x509_trs.c
  crypto/x509v3/pcy_cache.c
  crypto/x509v3/pcy_data.c
  crypto/x509v3/pcy_lib.c
  crypto/x509v3/pcy_map.c
  crypto/x509v3/pcy_node.c
  crypto/x509v3/pcy_tree.c
  crypto/x509v3/v3_addr.c
  crypto/x509v3/v3_admis.c
  crypto/x509v3/v3_akey.c
  crypto/x509v3/v3_akeya.c
  crypto/x509v3/v3_alt.c
  crypto/x509v3/v3_asid.c
  crypto/x509v3/v3_bcons.c
  crypto/x509v3/v3_bitst.c
  crypto/x509v3/v3_conf.c
  crypto/x509v3/v3_cpols.c
  crypto/x509v3/v3_crld.c
  crypto/x509v3/v3_enum.c
  crypto/x509v3/v3_extku.c
  crypto/x509v3/v3_genn.c
  crypto/x509v3/v3_ia5.c
  crypto/x509v3/v3_info.c
  crypto/x509v3/v3_int.c
  crypto/x509v3/v3_lib.c
  crypto/x509v3/v3_ncons.c
  crypto/x509v3/v3_pci.c
  crypto/x509v3/v3_pcia.c
  crypto/x509v3/v3_pcons.c
  crypto/x509v3/v3_pku.c
  crypto/x509v3/v3_pmaps.c
  crypto/x509v3/v3_prn.c
  crypto/x509v3/v3_purp.c
  crypto/x509v3/v3_skey.c
  crypto/x509v3/v3_sxnet.c
  crypto/x509v3/v3_tlsf.c
  crypto/x509v3/v3_utl.c
  crypto/x509v3/v3err.c)

list(
  APPEND
  OPENSSL_3_CRYPTO_SOURCE
  ${OPENSSL_SHARED_CRYPTO_SOURCE}
  crypto/asn1/asn1_parse.c
  crypto/asn1/d2i_param.c
  crypto/asn1/i2d_evp.c
  crypto/asn1_dsa.c
  crypto/bio/bf_prefix.c
  crypto/bio/bf_readbuff.c
  crypto/bio/bio_addr.c
  crypto/bio/bio_dump.c
  crypto/bio/bio_print.c
  crypto/bio/bio_sock.c
  crypto/bio/bio_sock2.c
  crypto/bio/bss_core.c
  crypto/bio/bss_core.c
  crypto/bio/ossl_core_bio.c
  crypto/bn/asm/x86_64-gcc.c
  crypto/bn/bn_conv.c
  crypto/bn/bn_rsa_fips186_4.c
  crypto/bn/rsaz_exp_x2.c
  crypto/bsearch.c
  crypto/context.c
  crypto/core_algorithm.c
  crypto/core_fetch.c
  crypto/core_namemap.c
  crypto/cpuid.c
  crypto/der_writer.c
  crypto/dh/dh_backend.c
  crypto/dh/dh_group_params.c
  crypto/dsa/dsa_backend.c
  crypto/dsa/dsa_check.c
  crypto/ec/curve448/arch_32/f_impl32.c
  crypto/ec/curve448/arch_64/f_impl64.c
  crypto/ec/ec_backend.c
  crypto/ec/ec_deprecated.c
  crypto/ec/ecx_backend.c
  crypto/ec/ecx_key.c
  crypto/encode_decode/decoder_err.c
  crypto/encode_decode/decoder_lib.c
  crypto/encode_decode/decoder_meth.c
  crypto/encode_decode/decoder_pkey.c
  crypto/encode_decode/encoder_err.c
  crypto/encode_decode/encoder_lib.c
  crypto/encode_decode/encoder_meth.c
  crypto/encode_decode/encoder_pkey.c
  crypto/err/err_all_legacy.c
  crypto/err/err_blocks.c
  crypto/ess/ess_asn1.c
  crypto/ess/ess_err.c
  crypto/ess/ess_lib.c
  crypto/evp/asymcipher.c
  crypto/evp/ctrl_params_translate.c
  crypto/evp/dh_ctrl.c
  crypto/evp/dh_support.c
  crypto/evp/dsa_ctrl.c
  crypto/evp/ec_ctrl.c
  crypto/evp/ec_support.c
  crypto/evp/evp_fetch.c
  crypto/evp/evp_rand.c
  crypto/evp/evp_utils.c
  crypto/evp/exchange.c
  crypto/evp/kdf_lib.c
  crypto/evp/kdf_meth.c
  crypto/evp/kem.c
  crypto/evp/keymgmt_lib.c
  crypto/evp/keymgmt_meth.c
  crypto/evp/legacy_md5.c
  crypto/evp/legacy_md5_sha1.c
  crypto/evp/legacy_sha.c
  crypto/evp/mac_lib.c
  crypto/evp/mac_meth.c
  crypto/evp/p_legacy.c
  crypto/evp/pmeth_check.c
  crypto/evp/signature.c
  crypto/ffc/ffc_backend.c
  crypto/ffc/ffc_dh.c
  crypto/ffc/ffc_key_generate.c
  crypto/ffc/ffc_key_validate.c
  crypto/ffc/ffc_params.c
  crypto/ffc/ffc_params_generate.c
  crypto/ffc/ffc_params_validate.c
  crypto/http/http_client.c
  crypto/http/http_err.c
  crypto/http/http_lib.c
  crypto/info.c
  crypto/initthread.c
  crypto/md5/md5_sha1.c
  crypto/modes/siv128.c
  crypto/ocsp/ocsp_http.c
  crypto/packet.c
  crypto/param_build.c
  crypto/param_build_set.c
  crypto/params.c
  crypto/params_dup.c
  crypto/params_from_text.c
  crypto/passphrase.c
  crypto/property/defn_cache.c
  crypto/property/property.c
  crypto/property/property_err.c
  crypto/property/property_parse.c
  crypto/property/property_query.c
  crypto/property/property_string.c
  crypto/provider.c
  crypto/provider_child.c
  crypto/provider_conf.c
  crypto/provider_core.c
  crypto/provider_predefined.c
  crypto/punycode.c
  crypto/rand/prov_seed.c
  crypto/rand/rand_deprecated.c
  crypto/rand/rand_meth.c
  crypto/rand/rand_pool.c
  crypto/rsa/rsa_backend.c
  crypto/rsa/rsa_mp_names.c
  crypto/rsa/rsa_schemes.c
  crypto/rsa/rsa_sp800_56b_check.c
  crypto/rsa/rsa_sp800_56b_gen.c
  crypto/self_test_core.c
  crypto/sha/sha3.c
  crypto/sparse_array.c
  crypto/store/store_meth.c
  crypto/store/store_result.c
  crypto/threads_lib.c
  crypto/trace.c
  crypto/x509/by_store.c
  crypto/x509/pcy_cache.c
  crypto/x509/pcy_data.c
  crypto/x509/pcy_lib.c
  crypto/x509/pcy_map.c
  crypto/x509/pcy_node.c
  crypto/x509/pcy_tree.c
  crypto/x509/v3_addr.c
  crypto/x509/v3_admis.c
  crypto/x509/v3_akeya.c
  crypto/x509/v3_akid.c
  crypto/x509/v3_asid.c
  crypto/x509/v3_bcons.c
  crypto/x509/v3_bitst.c
  crypto/x509/v3_conf.c
  crypto/x509/v3_cpols.c
  crypto/x509/v3_crld.c
  crypto/x509/v3_enum.c
  crypto/x509/v3_extku.c
  crypto/x509/v3_genn.c
  crypto/x509/v3_ia5.c
  crypto/x509/v3_info.c
  crypto/x509/v3_int.c
  crypto/x509/v3_ist.c
  crypto/x509/v3_lib.c
  crypto/x509/v3_ncons.c
  crypto/x509/v3_pci.c
  crypto/x509/v3_pcia.c
  crypto/x509/v3_pcons.c
  crypto/x509/v3_pku.c
  crypto/x509/v3_pmaps.c
  crypto/x509/v3_prn.c
  crypto/x509/v3_purp.c
  crypto/x509/v3_san.c
  crypto/x509/v3_skid.c
  crypto/x509/v3_sxnet.c
  crypto/x509/v3_tlsf.c
  crypto/x509/v3_utf8.c
  crypto/x509/v3_utl.c
  crypto/x509/v3err.c
  crypto/x509/x509_trust.c
  providers/baseprov.c
  providers/common/bio_prov.c
  providers/common/capabilities.c
  providers/common/der/der_dsa_key.c
  providers/common/der/der_dsa_sig.c
  providers/common/der/der_ec_key.c
  providers/common/der/der_ec_sig.c
  providers/common/der/der_ecx_key.c
  providers/common/der/der_rsa_key.c
  providers/common/der/der_rsa_sig.c
  providers/common/digest_to_nid.c
  providers/common/provider_ctx.c
  providers/common/provider_err.c
  providers/common/provider_seeding.c
  providers/common/provider_util.c
  providers/common/securitycheck.c
  providers/common/securitycheck_default.c
  providers/defltprov.c
  providers/implementations/asymciphers/rsa_enc.c
  providers/implementations/ciphers/cipher_aes.c
  providers/implementations/ciphers/cipher_aes_cbc_hmac_sha.c
  providers/implementations/ciphers/cipher_aes_cbc_hmac_sha1_hw.c
  providers/implementations/ciphers/cipher_aes_cbc_hmac_sha256_hw.c
  providers/implementations/ciphers/cipher_aes_ccm.c
  providers/implementations/ciphers/cipher_aes_ccm_hw.c
  providers/implementations/ciphers/cipher_aes_gcm.c
  providers/implementations/ciphers/cipher_aes_gcm_hw.c
  providers/implementations/ciphers/cipher_aes_hw.c
  providers/implementations/ciphers/cipher_aes_ocb.c
  providers/implementations/ciphers/cipher_aes_ocb_hw.c
  providers/implementations/ciphers/cipher_aes_wrp.c
  providers/implementations/ciphers/cipher_aes_xts.c
  providers/implementations/ciphers/cipher_aes_xts_fips.c
  providers/implementations/ciphers/cipher_aes_xts_hw.c
  providers/implementations/ciphers/cipher_cts.c
  providers/implementations/ciphers/cipher_des.c
  providers/implementations/ciphers/cipher_des_hw.c
  providers/implementations/ciphers/cipher_desx.c
  providers/implementations/ciphers/cipher_desx_hw.c
  providers/implementations/ciphers/cipher_null.c
  providers/implementations/ciphers/cipher_rc2.c
  providers/implementations/ciphers/cipher_rc2_hw.c
  providers/implementations/ciphers/cipher_tdes.c
  providers/implementations/ciphers/cipher_tdes_common.c
  providers/implementations/ciphers/cipher_tdes_default.c
  providers/implementations/ciphers/cipher_tdes_default_hw.c
  providers/implementations/ciphers/cipher_tdes_hw.c
  providers/implementations/ciphers/cipher_tdes_wrap.c
  providers/implementations/ciphers/cipher_tdes_wrap_hw.c
  providers/implementations/ciphers/ciphercommon.c
  providers/implementations/ciphers/ciphercommon_block.c
  providers/implementations/ciphers/ciphercommon_ccm.c
  providers/implementations/ciphers/ciphercommon_ccm_hw.c
  providers/implementations/ciphers/ciphercommon_gcm.c
  providers/implementations/ciphers/ciphercommon_gcm_hw.c
  providers/implementations/ciphers/ciphercommon_hw.c
  providers/implementations/digests/digestcommon.c
  providers/implementations/digests/md5_prov.c
  providers/implementations/digests/md5_sha1_prov.c
  providers/implementations/digests/null_prov.c
  providers/implementations/digests/sha2_prov.c
  providers/implementations/digests/sha3_prov.c
  providers/implementations/encode_decode/decode_der2key.c
  providers/implementations/encode_decode/decode_epki2pki.c
  providers/implementations/encode_decode/decode_msblob2key.c
  providers/implementations/encode_decode/decode_pem2der.c
  providers/implementations/encode_decode/decode_pvk2key.c
  providers/implementations/encode_decode/decode_spki2typespki.c
  providers/implementations/encode_decode/encode_key2any.c
  providers/implementations/encode_decode/encode_key2blob.c
  providers/implementations/encode_decode/encode_key2ms.c
  providers/implementations/encode_decode/encode_key2text.c
  providers/implementations/encode_decode/endecoder_common.c
  providers/implementations/exchange/dh_exch.c
  providers/implementations/exchange/ecdh_exch.c
  providers/implementations/exchange/ecx_exch.c
  providers/implementations/exchange/kdf_exch.c
  providers/implementations/kdfs/hkdf.c
  providers/implementations/kdfs/kbkdf.c
  providers/implementations/kdfs/krb5kdf.c
  providers/implementations/kdfs/pbkdf1.c
  providers/implementations/kdfs/pbkdf2.c
  providers/implementations/kdfs/pbkdf2_fips.c
  providers/implementations/kdfs/pkcs12kdf.c
  providers/implementations/kdfs/scrypt.c
  providers/implementations/kdfs/sshkdf.c
  providers/implementations/kdfs/sskdf.c
  providers/implementations/kdfs/tls1_prf.c
  providers/implementations/kdfs/x942kdf.c
  providers/implementations/kem/rsa_kem.c
  providers/implementations/keymgmt/dh_kmgmt.c
  providers/implementations/keymgmt/dsa_kmgmt.c
  providers/implementations/keymgmt/ec_kmgmt.c
  providers/implementations/keymgmt/ecx_kmgmt.c
  providers/implementations/keymgmt/kdf_legacy_kmgmt.c
  providers/implementations/keymgmt/mac_legacy_kmgmt.c
  providers/implementations/keymgmt/rsa_kmgmt.c
  providers/implementations/macs/cmac_prov.c
  providers/implementations/macs/gmac_prov.c
  providers/implementations/macs/hmac_prov.c
  providers/implementations/macs/kmac_prov.c
  providers/implementations/rands/crngt.c
  providers/implementations/rands/drbg.c
  providers/implementations/rands/drbg_ctr.c
  providers/implementations/rands/drbg_hash.c
  providers/implementations/rands/drbg_hmac.c
  providers/implementations/rands/seed_src.c
  providers/implementations/rands/seeding/rand_cpu_x86.c
  providers/implementations/rands/seeding/rand_tsc.c
  providers/implementations/rands/seeding/rand_unix.c
  providers/implementations/rands/seeding/rand_win.c
  providers/implementations/rands/test_rng.c
  providers/implementations/signature/dsa_sig.c
  providers/implementations/signature/ecdsa_sig.c
  providers/implementations/signature/eddsa_sig.c
  providers/implementations/signature/mac_legacy_sig.c
  providers/implementations/signature/rsa_sig.c
  providers/implementations/storemgmt/file_store.c
  providers/implementations/storemgmt/file_store_any2obj.c
  providers/legacyprov.c
  providers/nullprov.c
  providers/prov_running.c
  ssl/record/tls_pad.c
  ssl/s3_cbc.c)

list(TRANSFORM OPENSSL_1_CRYPTO_SOURCE PREPEND "openssl/")
list(TRANSFORM OPENSSL_3_CRYPTO_SOURCE PREPEND "openssl_3/")

# Add provider source files generated by update.make
list(
  APPEND
  OPENSSL_3_CRYPTO_SOURCE
  ${CMAKE_CURRENT_SOURCE_DIR}/providers_3/common/der/der_digests_gen.c
  ${CMAKE_CURRENT_SOURCE_DIR}/providers_3/common/der/der_dsa_gen.c
  ${CMAKE_CURRENT_SOURCE_DIR}/providers_3/common/der/der_ec_gen.c
  ${CMAKE_CURRENT_SOURCE_DIR}/providers_3/common/der/der_ecx_gen.c
  ${CMAKE_CURRENT_SOURCE_DIR}/providers_3/common/der/der_rsa_gen.c
  ${CMAKE_CURRENT_SOURCE_DIR}/providers_3/common/der/der_sm2_gen.c
  ${CMAKE_CURRENT_SOURCE_DIR}/providers_3/common/der/der_wrap_gen.c)

# The DRBG random provider used with OpenSSL3 can call openssl_get_fork_id()
# which uses getpid that is not supported on Windows.
# We force include this header so that openssl_get_fork_id returns 0 instead.
if (WIN32)
  string(REPLACE "/" "\\" COMPILE_CURRENT_SOURCE_DIR
                 "${CMAKE_CURRENT_SOURCE_DIR}")
  set(DEFINE_GETPID_COMPILE_OPTION
      "-include${COMPILE_CURRENT_SOURCE_DIR}\\define_getpid_noop.h")
else ()
  set(DEFINE_GETPID_COMPILE_OPTION
      "-include${CMAKE_CURRENT_SOURCE_DIR}/define_getpid_noop.h")
endif ()
set_source_files_properties(
  openssl_3/crypto/threads_pthread.c PROPERTIES COMPILE_OPTIONS
                                                ${DEFINE_GETPID_COMPILE_OPTION})

# Add opensslcrypto (the libcrypto in openssl).
# The assembly files are modified to be compatible with LVI mitigation.
add_enclave_library(
  opensslcrypto STATIC ${OPENSSL_1_CRYPTO_SOURCE}
  ${OPENSSL_GENERATED_BYPRODUCTS} ${OPENSSL_COPIED_BYPRODUCTS})

add_enclave_library(
  opensslcrypto_3 STATIC ${OPENSSL_3_CRYPTO_SOURCE}
  ${OPENSSL_3_GENERATED_BYPRODUCTS} ${OPENSSL_3_COPIED_BYPRODUCTS})

# Including source files for building libssl.a based on the OpenSSL Makefile(s).
set(OPENSSL_SHARED_SSL_SOURCE
    ssl/bio_ssl.c
    ssl/d1_lib.c
    ssl/d1_msg.c
    ssl/d1_srtp.c
    ssl/methods.c
    ssl/pqueue.c
    ssl/record/dtls1_bitmap.c
    ssl/record/rec_layer_d1.c
    ssl/record/rec_layer_s3.c
    ssl/record/ssl3_buffer.c
    ssl/record/ssl3_record.c
    ssl/record/ssl3_record_tls13.c
    ssl/s3_enc.c
    ssl/s3_lib.c
    ssl/s3_msg.c
    ssl/ssl_asn1.c
    ssl/ssl_cert.c
    ssl/ssl_ciph.c
    ssl/ssl_conf.c
    ssl/ssl_err.c
    ssl/ssl_init.c
    ssl/ssl_lib.c
    ssl/ssl_mcnf.c
    ssl/ssl_rsa.c
    ssl/ssl_sess.c
    ssl/ssl_stat.c
    ssl/ssl_txt.c
    ssl/ssl_utst.c
    ssl/statem/extensions.c
    ssl/statem/extensions_clnt.c
    ssl/statem/extensions_cust.c
    ssl/statem/extensions_srvr.c
    ssl/statem/statem.c
    ssl/statem/statem_clnt.c
    ssl/statem/statem_dtls.c
    ssl/statem/statem_lib.c
    ssl/statem/statem_srvr.c
    ssl/t1_enc.c
    ssl/t1_lib.c
    ssl/t1_trce.c
    ssl/tls13_enc.c
    ssl/tls_srp.c)

list(APPEND OPENSSL_1_SSL_SOURCE ${OPENSSL_SHARED_SSL_SOURCE} ssl/packet.c
     ssl/s3_cbc.c)

list(APPEND OPENSSL_3_SSL_SOURCE ${OPENSSL_SHARED_SSL_SOURCE}
     ssl/ssl_err_legacy.c ssl/ssl_rsa_legacy.c ssl/tls_depr.c)

list(TRANSFORM OPENSSL_1_SSL_SOURCE PREPEND "openssl/")
list(TRANSFORM OPENSSL_3_SSL_SOURCE PREPEND "openssl_3/")

# Disable optimizations for cts128.c to avoid Clang speculative load hardening flag compiler bug
# Always dose this on Windows as we cannot know the version of clang.
if (WIN32 OR CMAKE_C_COMPILER_ID MATCHES Clang)
  set_source_files_properties(openssl/crypto/modes/cts128.c
                              PROPERTIES COMPILE_FLAGS -O0)
endif ()
# Add opensslssl (the libssl in openssl).
add_enclave_library(opensslssl STATIC ${OPENSSL_1_SSL_SOURCE})

add_enclave_library(opensslssl_3 STATIC ${OPENSSL_3_SSL_SOURCE})

enclave_include_directories(
  opensslcrypto PRIVATE $<BUILD_INTERFACE:${OPENSSL_BUILD_INCLUDES}>
  $<BUILD_INTERFACE:${OPENSSL_DIR}> $<BUILD_INTERFACE:${OPENSSL_DIR}/include>)

enclave_include_directories(
  opensslcrypto_3
  PRIVATE
  $<BUILD_INTERFACE:${OPENSSL_3_BUILD_INCLUDES}>
  $<BUILD_INTERFACE:${OPENSSL_3_DIR}>
  $<BUILD_INTERFACE:${OPENSSL_3_DIR}/include>
  $<BUILD_INTERFACE:${OPENSSL_3_DIR}/providers/common/include>
  $<BUILD_INTERFACE:${OPENSSL_3_DIR}/providers/implementations/include>)

# Only mark the directories that include headers to be published as PUBLIC.
enclave_include_directories(
  opensslcrypto PUBLIC $<BUILD_INTERFACE:${OE_INCDIR}/openenclave>
  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty>)

enclave_include_directories(
  opensslcrypto_3
  PUBLIC
  $<BUILD_INTERFACE:${OE_INCDIR}/openenclave/openssl_3>
  $<BUILD_INTERFACE:${OE_INCDIR}/openenclave>
  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty/openssl_3>
  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty>)

enclave_include_directories(
  opensslssl PRIVATE $<BUILD_INTERFACE:${OPENSSL_BUILD_INCLUDES}>
  $<BUILD_INTERFACE:${OPENSSL_DIR}> $<BUILD_INTERFACE:${OPENSSL_DIR}/include>)

enclave_include_directories(
  opensslssl_3 PRIVATE $<BUILD_INTERFACE:${OPENSSL_3_BUILD_INCLUDES}>
  $<BUILD_INTERFACE:${OPENSSL_3_DIR}>
  $<BUILD_INTERFACE:${OPENSSL_3_DIR}/include>)

maybe_build_using_clangw(opensslcrypto)
maybe_build_using_clangw(opensslssl)
maybe_build_using_clangw(opensslcrypto_3)
maybe_build_using_clangw(opensslssl_3)

add_enclave_dependencies(opensslcrypto openssl_generated)
add_enclave_dependencies(opensslssl opensslcrypto)
add_enclave_dependencies(opensslcrypto_3 openssl_3_generated)
add_enclave_dependencies(opensslssl_3 opensslcrypto_3)

enclave_link_libraries(opensslcrypto PUBLIC oelibc oe_includes)
enclave_link_libraries(opensslssl PUBLIC opensslcrypto)
enclave_link_libraries(opensslcrypto_3 PUBLIC oelibc oe_includes)
enclave_link_libraries(opensslssl_3 PUBLIC opensslcrypto_3)

set(OPENSSL_COMPILE_OPTIONS
    -Wa,--noexecstack
    -Wall
    # Suppress the following warnings that are commonly raised during the compilation.
    -Wno-unused-parameter
    -Wno-shorten-64-to-32
    -Wno-sign-conversion
    -Wno-conversion)

if (OPENSSL_C_COMPILER MATCHES clang)
  list(APPEND OPENSSL_COMPILE_OPTIONS -Qunused-arguments)
endif ()

if (OE_SGX)
  list(APPEND OPENSSL_COMPILE_OPTIONS -m64)
endif ()

enclave_compile_options(opensslcrypto PRIVATE ${OPENSSL_COMPILE_OPTIONS})
enclave_compile_options(opensslssl PRIVATE ${OPENSSL_COMPILE_OPTIONS})

enclave_compile_options(opensslcrypto_3 PRIVATE ${OPENSSL_COMPILE_OPTIONS})
enclave_compile_options(opensslssl_3 PRIVATE ${OPENSSL_COMPILE_OPTIONS})

# Clang version greater than 8 fails on compiling the following source with optimization.
# Explicitly set -O0 as a workaround. See #2556 for the similar issue.
# Always does this on Windows as we cannot know the version of clang.
if (WIN32
    OR (OPENSSL_C_COMPILER MATCHES clang
        AND CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 8
        AND CMAKE_C_COMPILER_VERSION VERSION_LESS 9.0))
  set_property(
    SOURCE openssl/crypto/modes/cts128.c
    APPEND_STRING
    PROPERTY COMPILE_FLAGS " -O0")
endif ()

list(
  APPEND
  CURVE448_SRC
  openssl/crypto/ec/curve448/arch_32/f_impl.c
  openssl/crypto/ec/curve448/curve448.c
  openssl/crypto/ec/curve448/curve448_tables.c
  openssl/crypto/ec/curve448/eddsa.c
  openssl/crypto/ec/curve448/f_generic.c
  openssl/crypto/ec/curve448/scalar.c)

set_property(
  SOURCE ${CURVE448_SRC} APPEND_STRING
  PROPERTY
    COMPILE_FLAGS
    " -I${OPENSSL_DIR}/crypto/ec/curve448 -I${OPENSSL_DIR}/crypto/ec/curve448/arch_32"
)

list(
  APPEND
  EVP_SRC
  openssl/crypto/evp/e_aes.c
  openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
  openssl/crypto/evp/e_aes_cbc_hmac_sha256.c
  openssl/crypto/evp/e_aria.c
  openssl/crypto/evp/e_camellia.c
  openssl/crypto/evp/e_sm4.c)

set_property(SOURCE ${EVP_SRC} APPEND_STRING
             PROPERTY COMPILE_FLAGS " -I${OPENSSL_DIR}/crypto/modes")

list(APPEND RAND_SRC openssl/crypto/rand/drbg_ctr.c)

set_property(SOURCE ${RAND_SRC} APPEND_STRING
             PROPERTY COMPILE_FLAGS " -I${OPENSSL_DIR}/crypto/modes")

# The following options cannot be specified as part of the OpenSSL
# Configure script. Options that can be specified with the script
# should be put into update.make file.
list(
  APPEND
  OPENSSL_BUILD_INFO
  OPENSSL_USE_NODELETE
  L_ENDIAN
  OPENSSL_PIC
  # Disable SECURE_MEMORY because it requires the linux/mman.h header
  # that musl does not provide (see mem_sec.c). This also removes the
  # dependencies of madvise, mlock, and mprotect libc functions that are
  # not supported by OE.
  OPENSSL_NO_SECURE_MEMORY
  # Avoid using the GCC-specific stdatomic.h header.
  __STDC_NO_ATOMICS__)

if (OE_SGX)
  list(
    APPEND
    OPENSSL_BUILD_INFO
    OPENSSL_CPUID_OBJ
    OPENSSL_IA32_SSE2
    OPENSSL_BN_ASM_MONT
    OPENSSL_BN_ASM_MONT5
    OPENSSL_BN_ASM_GF2m
    SHA1_ASM
    SHA256_ASM
    SHA512_ASM
    KECCAK1600_ASM
    RC4_ASM
    MD5_ASM
    AESNI_ASM
    VPAES_ASM
    GHASH_ASM
    ECP_NISTZ256_ASM
    X25519_ASM
    POLY1305_ASM)
endif ()

if (uppercase_CMAKE_BUILD_TYPE STREQUAL "RELEASE")
  list(APPEND OPENSSL_BUILD_INFO NDEBUG)
endif ()

# Exclude path-specific definitions from the build information.
list(APPEND OPENSSL_COMPILE_DEFINES ${OPENSSL_BUILD_INFO}
     OPENSSLDIR="${OPENSSL_BUILD}" ENGINESDIR="${OPENSSL_BUILD}/engines-1.1")

list(APPEND OPENSSL_3_COMPILE_DEFINES ${OPENSSL_BUILD_INFO}
     OPENSSLDIR="${OPENSSL_BUILD}" ENGINESDIR="${OPENSSL_BUILD}/engines-3"
     MODULESDIR="${OPENSSL_BUILD}/ossl-modules")

enclave_compile_definitions(opensslcrypto PRIVATE ${OPENSSL_COMPILE_DEFINES})
enclave_compile_definitions(opensslssl PRIVATE ${OPENSSL_COMPILE_DEFINES})

enclave_compile_definitions(opensslcrypto_3 PRIVATE
                            ${OPENSSL_3_COMPILE_DEFINES})
enclave_compile_definitions(opensslssl_3 PRIVATE ${OPENSSL_3_COMPILE_DEFINES})

# Generate the buildinf.h used by the OpenSSL_version API.
get_target_property(OPENSSL_C_OPTIONS opensslcrypto COMPILE_OPTIONS)
set(OPENSSL_C_DEFINES ${OPENSSL_BUILD_INFO})
list(TRANSFORM OPENSSL_C_DEFINES PREPEND "-D")
list(APPEND OPENSSL_CFLAGS ${OPENSSL_C_COMPILER} ${OPENSSL_C_OPTIONS}
     ${OPENSSL_C_DEFINES})
string(REPLACE ";" " " OPENSSL_CFLAGS "${OPENSSL_CFLAGS}")

add_custom_command(
  OUTPUT ${OPENSSL_BUILD_INCLUDES}/buildinf.h
  COMMAND ${CMAKE_COMMAND} -E make_directory ${OPENSSL_BUILD_INCLUDES}
  COMMAND ${OE_PERL} "${OPENSSL_DIR}/util/mkbuildinf.pl" "${OPENSSL_CFLAGS}"
          "${ARCH}" > ${OPENSSL_BUILD_INCLUDES}/buildinf.h)

add_custom_target(openssl_buildinf_header
                  DEPENDS ${OPENSSL_BUILD_INCLUDES}/buildinf.h)

add_enclave_dependencies(opensslcrypto openssl_buildinf_header)

add_custom_command(
  OUTPUT ${OPENSSL_3_BUILD_INCLUDES}/buildinf.h
  COMMAND ${CMAKE_COMMAND} -E make_directory ${OPENSSL_3_BUILD_INCLUDES}
  COMMAND ${OE_PERL} "${OPENSSL_3_DIR}/util/mkbuildinf.pl" "${OPENSSL_CFLAGS}"
          "${ARCH}" > ${OPENSSL_3_BUILD_INCLUDES}/buildinf.h)

add_custom_target(openssl_3_buildinf_header
                  DEPENDS ${OPENSSL_3_BUILD_INCLUDES}/buildinf.h)
add_enclave_dependencies(opensslcrypto_3 openssl_3_buildinf_header)

# Install the include files and the static libraries.
install_enclaves(
  TARGETS
  opensslcrypto
  opensslssl
  EXPORT
  openenclave-targets
  ARCHIVE
  DESTINATION
  ${CMAKE_INSTALL_LIBDIR}/openenclave/enclave)
install(
  DIRECTORY ${OPENSSL_INSTALL_INCLUDES}
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty
  PATTERN "__DECC_INCLUDE_EPILOGUE.H" EXCLUDE
  PATTERN "__DECC_INCLUDE_PROLOGUE.H" EXCLUDE
  PATTERN "opensslconf.h.in" EXCLUDE)

install_enclaves(
  TARGETS
  opensslcrypto_3
  opensslssl_3
  EXPORT
  openenclave-targets
  ARCHIVE
  DESTINATION
  ${CMAKE_INSTALL_LIBDIR}/openenclave/enclave)
install(
  DIRECTORY ${OPENSSL_3_INSTALL_INCLUDES}
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty/openssl_3
  PATTERN "__DECC_INCLUDE_EPILOGUE.H" EXCLUDE
  PATTERN "__DECC_INCLUDE_PROLOGUE.H" EXCLUDE
  PATTERN "opensslconf.h.in" EXCLUDE)

# Create openssl export target.
add_enclave_library(openssl INTERFACE)
enclave_link_libraries(openssl INTERFACE opensslcrypto opensslssl)
install_enclaves(TARGETS openssl EXPORT openenclave-targets)

add_enclave_library(openssl_3 INTERFACE)
enclave_link_libraries(openssl_3 INTERFACE opensslcrypto_3 opensslssl_3)
install_enclaves(TARGETS openssl_3 EXPORT openenclave-targets)
